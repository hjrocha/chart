version: 2.1

orbs:
  # codacy: codacy/base@dev:2.2.0-featurepublishbespokecodacychart.6d1c309
  codacy: codacy/base@1.2.1
  slack: circleci/slack@3.4.2

references:
  default_doks_image: &default_doks_image
    docker:
      - image: codacy/ci-do:0.3.0
    working_directory: ~/workdir/

  qa_automation_image: &qa_automation_image
    docker:
      - image: codacy/qa-automation-test-runner:1.7.2
      - image: selenium/standalone-chrome:3.141.0
        environment:
          JAVA_OPTS: -Xss256m -Xmx512m
          MAVEN_OPTS: -showversion -Xms256m -Xmx512m
    working_directory: ~/workdir

  # doks node types can be found here https://developers.digitalocean.com/documentation/v2/
  unstable_environment: &unstable_environment
    DOKS_CLUSTER_NAME: codacy-doks-cluster-dev
    DO_TF_WORKSPACE: dev
    RELEASE_NAME: codacy
    NAMESPACE: codacy
    NODE_TYPE: s-20vcpu-96gb
    K8S_VERSION: 1.14
    NUM_NODES: 5
    HELM_REPOSITORY: codacy-unstable
    CODACY_URL: http://k8s.unstable.dev.codacy.org

  stable_environment: &stable_environment
    DOKS_CLUSTER_NAME: codacy-doks-cluster-dev
    DO_TF_WORKSPACE: dev
    RELEASE_NAME: codacy-staging
    NAMESPACE: codacy-staging
    NODE_TYPE: s-20vcpu-96gb
    K8S_VERSION: 1.14
    NUM_NODES: 5
    HELM_REPOSITORY: codacy-stable
    CODACY_URL: http://k8s.staging.dev.codacy.org

  nightly_base_environment: &nightly_base_environment
    RELEASE_NAME: codacy-nightly
    NAMESPACE: codacy-nightly
    NODE_TYPE: s-20vcpu-96gb
    NUM_NODES: 4
    HELM_REPOSITORY: codacy-unstable

  nightly_environment_1_14: &nightly_environment_1_14
    <<: *nightly_base_environment
    DO_TF_WORKSPACE: nightly-1-14
    DOKS_CLUSTER_NAME: codacy-doks-cluster-nightly-1-14
    K8S_VERSION: 1.14

  nightly_environment_1_15: &nightly_environment_1_15
    <<: *nightly_base_environment
    DO_TF_WORKSPACE: nightly-1-15
    DOKS_CLUSTER_NAME: codacy-doks-cluster-nightly-1-15
    K8S_VERSION: 1.15

  release_environment: &release_environment
    DOKS_CLUSTER_NAME: codacy-doks-cluster-release
    DO_TF_WORKSPACE: release
    RELEASE_NAME: codacy-uat
    NAMESPACE: codacy-uat
    NODE_TYPE: s-20vcpu-96gb
    K8S_VERSION: 1.15
    NUM_NODES: 4
    CODACY_URL: http://k8s.uat.dev.codacy.org
    HELM_REPOSITORY: codacy-incubator

  qa_environment_hourly: &qa_environment_hourly
    SELENIUM_DRIVER_URL: http://localhost:4444/wd/hub
    HUB_URL: http://localhost:4444/wd/hub
    PROJECT_NAME: codacy-chart
    LAUNCH_DESCRIPTION: 'Automated Tests Ran by CircleCI'
    LAUNCH_TAG: CIRCLECI;WEB;DIGITALOCEAN;ENTERPRISE
    RP_ENDPOINT: https://reportportal.staging.codacy.org
    DOKS_CLUSTER_NAME: codacy-doks-cluster-dev
    DO_TF_WORKSPACE: hourly
    RELEASE_NAME: codacy-hourly
    NAMESPACE: codacy-hourly
    NODE_TYPE: s-20vcpu-96gb
    K8S_VERSION: 1.14
    NUM_NODES: 5
    HELM_REPOSITORY: codacy-unstable
    CODACY_URL: http://k8s.hourly.dev.codacy.org

  unstable_helm_channel: &unstable_helm_channel
    CHANNEL: unstable
    HELM_REPOSITORY: codacy-unstable

  incubator_helm_channel: &incubator_helm_channel
    CHANNEL: incubator
    HELM_REPOSITORY: codacy-incubator

  nightly_helm_channel: &nightly_helm_channel
    CHANNEL: nightly
    HELM_REPOSITORY: codacy-nightly

  stable_helm_channel: &stable_helm_channel
    CHANNEL: stable
    HELM_REPOSITORY: codacy-stable

  doctl_authenticate: &doctl_authenticate
    run:
      name: "Setup DO Credentials"
      command: doctl auth init -t $DO_TOKEN &>/dev/null


  doctl_set_kubeconfig: &doctl_set_kubeconfig
      run:
        name: "Set cluster in kubeconfig"
        command: doctl kubernetes cluster kubeconfig save "$DOKS_CLUSTER_NAME" --set-current-context

  persist_to_workspace: &persist_to_workspace
    persist_to_workspace:
        root: ~/
        paths:
          - workdir

  attach_workspace: &attach_workspace
    attach_workspace:
          at: ~/

  helm_lint: &helm_lint
    run:
          name: "Helm lint"
          command: helm lint codacy/

  deploy_to_cluster: &deploy_to_cluster
    steps:
      - checkout
      - <<: *attach_workspace
      - <<: *helm_lint
      - <<: *doctl_authenticate
      - deploy:
          name: Install Codacy
          command: make -C .doks/ deploy_to_doks RELEASE=$RELEASE NAMESPACE=$NAMESPACE

  deploy_to_cluster_from_chartmuseum: &deploy_to_cluster_from_chartmuseum
    steps:
      - <<: *attach_workspace
      - <<: *helm_lint
      - <<: *doctl_authenticate
      - deploy:
          name: Install Codacy
          command: make -C .doks/ deploy_to_doks_from_chartmuseum RELEASE=$RELEASE NAMESPACE=$NAMESPACE VERSION=$(cat .version) HELM_REPOSITORY=$HELM_REPOSITORY

  rotate_pods: &rotate_pods
    steps:
      - <<: *attach_workspace
      - <<: *helm_lint
      - <<: *doctl_authenticate
      - deploy:
          name: Rotate Pods
          command: make -C .doks/ rotate_pods NAMESPACE=$NAMESPACE

  validate_deployments: &validate_deployments
      run:
          name: "Validate deployment status"
          command: |
            set -e
            DEPLOYMENTS=$(kubectl get deployments -n "$NAMESPACE" | awk '{print "deployment/"$1}' | tail -n +2 )
            for DEPLOYMENT in ${DEPLOYMENTS[@]}
            do
                kubectl rollout status -n "$NAMESPACE" --timeout=30m --watch "$DEPLOYMENT"
            done

  validate_deployment_status_on_cluster: &validate_deployment_status_on_cluster
    steps:
      - <<: *attach_workspace
      - <<: *doctl_authenticate
      - <<: *doctl_set_kubeconfig
      - <<: *validate_deployments

  helm_push: &helm_push
    steps:
      - <<: *attach_workspace
      - run:
          name: Set image tag and version using semver
          command: |
            ytool -s appVersion "$(cat .version)" -s version "$(cat .version)" -f "./codacy/Chart.yaml" -e
            git --no-pager diff --no-color
      - run:
          name: Push to charts museum
          command: |
            helm dep up ./codacy
            echo "Adding 'https://charts.codacy.com/${CHANNEL}'"
            helm repo add --username "${CHARTS_REPO_USER}" --password "${CHARTS_REPO_PASS}" ${HELM_REPOSITORY} https://charts.codacy.com/${CHANNEL}
            helm push ./codacy ${HELM_REPOSITORY}
      - <<: *persist_to_workspace

  qa_job: &qa_job
    steps:
      - <<: *attach_workspace
      - deploy:
          name: Run tests
          command: |
            export URL=$CODACY_URL
            export URLLANDING=$URL/
            export URLLOGGED=$URL/projects
            export EXECUTION_TIME=`date +%F_%Hh%M-%Z`
            sh /opt/tests/qa-automation-test-runner/build/run_tests.sh

  update_codacy_url: &update_codacy_url
    steps:
      - <<: *attach_workspace
      - <<: *doctl_authenticate
      - run:
          name: Set cluster
          command: doctl kubernetes cluster kubeconfig save "$DOKS_CLUSTER_NAME" --set-current-context
      - deploy:
          name: Wait for codacy-api ingress
          command: |
            external_ip=""; while [ -z $external_ip ]; do echo "Waiting for codacy-api ingress..."; external_ip=$(kubectl get service -n "$NAMESPACE" codacy-api --template="{{range .status.loadBalancer.ingress}}{{.ip}}{{end}}"); [ -z "$external_ip" ] && sleep 10; done; echo "End point ready-" && echo $external_ip; export endpoint=$external_ip
            echo "CODACY_API=$endpoint" > .apiurl
      - deploy:
          name: Update codacy-api ip address
          command: |
              CODACY_HOSTNAME=$(kubectl get services codacy-api --namespace $NAMESPACE -o=jsonpath='{.status.loadBalancer.ingress[0].ip}');
              make -C .doks/ deploy_to_doks RELEASE=$RELEASE NAMESPACE=$NAMESPACE CODACY_URL=http://$CODACY_HOSTNAME
      - when:
          condition: <<parameters.persist_codacy_url>>
          steps:
            - <<: *persist_to_workspace

jobs:
  deploy_to_doks_unstable:
    <<: *default_doks_image
    environment:
      <<: *unstable_environment
    <<: *deploy_to_cluster

  deploy_to_doks:
    <<: *default_doks_image
    environment:
      <<: *stable_environment
    <<: *deploy_to_cluster

  deploy_to_doks_hourly:
    <<: *default_doks_image
    environment:
      <<: *qa_environment_hourly
    <<: *deploy_to_cluster_from_chartmuseum

  deploy_to_doks_nightly_1_14:
    <<: *default_doks_image
    environment:
      <<: *nightly_environment_1_14
    <<: *deploy_to_cluster_from_chartmuseum

  deploy_to_doks_nightly_1_15:
    <<: *default_doks_image
    environment:
      <<: *nightly_environment_1_15
    <<: *deploy_to_cluster_from_chartmuseum

  rotate_pods_hourly:
    <<: *default_doks_image
    environment:
      <<: *qa_environment_hourly
    <<: *rotate_pods

  rotate_pods_nightly_1_14:
    <<: *default_doks_image
    environment:
      <<: *nightly_environment_1_14
    <<: *rotate_pods

  rotate_pods_nightly_1_15:
    <<: *default_doks_image
    environment:
      <<: *nightly_environment_1_15
    <<: *rotate_pods

  rotate_pods_release:
    <<: *default_doks_image
    environment:
      <<: *release_environment
    <<: *rotate_pods

  validate_deployment_status_hourly:
    <<: *default_doks_image
    environment:
      <<: *qa_environment_hourly
    steps:
      - <<: *attach_workspace
      - <<: *doctl_authenticate
      - <<: *doctl_set_kubeconfig
      - <<: *validate_deployments

  validate_deployment_status_nightly_1_14:
    <<: *default_doks_image
    environment:
      <<: *nightly_environment_1_14
    steps:
      - <<: *attach_workspace
      - <<: *doctl_authenticate
      - <<: *doctl_set_kubeconfig
      - <<: *validate_deployments

  validate_deployment_status_nightly_1_15:
    <<: *default_doks_image
    environment:
      <<: *nightly_environment_1_15
    steps:
      - <<: *attach_workspace
      - <<: *doctl_authenticate
      - <<: *doctl_set_kubeconfig
      - <<: *validate_deployments

  deploy_to_doks_release:
    <<: *default_doks_image
    environment:
      <<: *release_environment
    <<: *deploy_to_cluster_from_chartmuseum

  validate_deployment_status_release:
    <<: *default_doks_image
    environment:
      <<: *release_environment
    steps:
      - <<: *attach_workspace
      - <<: *doctl_authenticate
      - <<: *doctl_set_kubeconfig
      - <<: *validate_deployments

  helm_push_incubator:
    <<: *default_doks_image
    environment:
      <<: *incubator_helm_channel
    <<: *helm_push

  helm_push_unstable:
    <<: *default_doks_image
    environment:
      <<: *unstable_helm_channel
    <<: *helm_push

  update_codacy_url_nightly_1_14:
    <<: *default_doks_image
    environment:
      <<: *nightly_environment_1_14
    parameters:
      persist_codacy_url:
        type: boolean
        default: false
    <<: *update_codacy_url

  update_codacy_url_nightly_1_15:
    <<: *default_doks_image
    environment:
      <<: *nightly_environment_1_15
    parameters:
      persist_codacy_url:
        type: boolean
        default: false
    <<: *update_codacy_url

  update_codacy_url_hourly:
    <<: *default_doks_image
    environment:
      <<: *qa_environment_hourly
    parameters:
      persist_codacy_url:
        type: boolean
        default: true
    <<: *update_codacy_url

  test_api_dev:
    <<: *qa_automation_image
    environment:
      <<: *stable_environment
      <<: *qa_environment_hourly
      TEST_PATH: Suite/Enterprise/K8S_HOURLY/API_DEV.xml
      LAUNCH_NAME: ENTERPRISE_API_HOURLY_TESTS
    <<: *qa_job

  test_e2e_dev:
    <<: *qa_automation_image
    environment:
      <<: *stable_environment
      <<: *qa_environment_hourly
      TEST_PATH: Suite/Enterprise/K8S_HOURLY/E2E_DEV.xml
      LAUNCH_NAME: ENTERPRISE_E2E_HOURLY_TESTS
    <<: *qa_job

  test_web_dev:
    <<: *qa_automation_image
    environment:
      <<: *stable_environment
      <<: *qa_environment_hourly
      TEST_PATH: Suite/Enterprise/K8S_HOURLY/WEB_DEV.xml
      LAUNCH_NAME: ENTERPRISE_WEB_HOURLY_TESTS
    <<: *qa_job

  set_chart_version_nightly:
    <<: *default_doks_image
    steps:
      - <<: *attach_workspace
      - run:
          name: Set chart version suffix
          command: |
            mv .version .version_tmp
            sed -E "s/SNAPSHOT\.[0-9,a-z]+/NIGHTLY.$(date "+%d-%m-%Y")/g" .version_tmp >> .version
            rm .version_tmp
      - run:
          name: Print version
          command: cat .version
      - <<: *persist_to_workspace

  set_chart_version_release:
    <<: *default_doks_image
    steps:
      - <<: *attach_workspace
      - run:
          name: Set chart version suffix
          command: |
            mv .version .version_tmp
            sed -E "s/-.*//g" .version_tmp >> .version
            rm .version_tmp
      - run:
          name: Print version
          command: cat .version
      - <<: *persist_to_workspace

  update_versions:
    <<: *default_doks_image
    working_directory: ~/workdir/
    steps:
      - <<: *attach_workspace
      - run:
          name: "Get latest chart versions"
          command: make update_dependencies
      - <<: *persist_to_workspace

  upload_docs:
    docker:
      - image: circleci/python:3.8
    working_directory: ~/workdir/
    steps:
      - <<: *attach_workspace
      - add_ssh_keys:
          fingerprints:
            - "df:83:d7:c7:d5:79:06:c2:3b:d1:fd:e2:a3:d1:12:c5"
      - run:
          name: ssh keyscan
          command: |
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Set cluster
          command: |
            sudo pip install -r requirements.pip
            mkdocs gh-deploy -m "[ci skip] Updated documentation."

  get_changelogs:
    docker:
      - image: codacy/ci-base:1.0.1
    working_directory: ~/workdir/
    steps:
      - add_ssh_keys:
          fingerprints:
            - "df:83:d7:c7:d5:79:06:c2:3b:d1:fd:e2:a3:d1:12:c5"
      - <<: *attach_workspace
      - run:
          name: "Install requirements"
          command: apk add sudo util-linux && curl -Lo /usr/local/bin/yq "https://github.com/mikefarah/yq/releases/download/2.4.0/yq_linux_amd64" && chmod +x /usr/local/bin/yq
      - run:
          name: setup ssh
          command: |
            ssh-keyscan bitbucket.org >> ~/.ssh/known_hosts
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: "Get changelogs"
          command: bash ./.circleci/getChangelogs.sh
      - <<: *persist_to_workspace
      - store_artifacts:
          path: ~/workdir/changelogs

  commit_requirements:
    <<: *default_doks_image
    environment:
      <<: *nightly_environment_1_14
    steps:
      - <<: *attach_workspace
      - add_ssh_keys:
          fingerprints:
            - "df:83:d7:c7:d5:79:06:c2:3b:d1:fd:e2:a3:d1:12:c5"
      - run:
          name: "Setup git"
          command: |
            git config --global user.email "circleci@codacy.com"
            git config --global user.name "codacycircleci"
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            ssh-keyscan bitbucket.org >> ~/.ssh/known_hosts
      - deploy:
          name: Commit and push requirements.lock file
          command: |
            BRANCH=$(git rev-parse --abbrev-ref HEAD)
            git add codacy/requirements.lock
            git commit -m "[ci skip] nightly requirements.lock commit."
            git push --set-upstream origin $BRANCH
      - <<: *persist_to_workspace

  slack_notify_release:
    <<: *default_doks_image
    steps:
      - <<: *attach_workspace
      - slack/notify:
          channel: '#sh_releases'
          color: '#2EB67D'
          title: $(cat .version)
          message: $(cat changelogs/changelog.txt)

  deploy_to_selfhosted_dev:
    <<: *default_doks_image
    environment:
      RELEASE_NAME: codacy-unstable
      NAMESPACE: codacy-unstable
      CODACY_URL: http://k8s.unstable.dev.codacy.org
      DOKS_CLUSTER_NAME: codacy-doks-cluster-dev
    steps:
      - <<: *attach_workspace
      - <<: *doctl_authenticate
      - <<: *doctl_set_kubeconfig
      - deploy:
          name: Patch worker version
          command: ytool -f "codacy/values.yaml" -s worker-manager.config.codacy.worker.image "unstable" -e
      - deploy:
          name: Poll for installation availability
          command: |
            TIMEOUT_IN_SECS=300
            POLL_INTERVAL_IN_SECS=5
            release=$(helm list | awk '{print $1}' | tail -n +2 | grep $RELEASE_NAME)
            if [ "$release" == "$RELEASE_NAME" ]; then
                    echo "Release '$RELEASE_NAME' found."
                    for i in `seq 1 $(($TIMEOUT_IN_SECS / $POLL_INTERVAL_IN_SECS))`; do
                        result=$(helm history $RELEASE_NAME --max=1 -o json)
                        status=$(echo $result | jq .[].status)
                        chart=$(echo $result | jq .[].chart)
                        revision=$(echo $result | jq .[].revision)
                        if [ "\"DEPLOYED\"" != "$status" ]; then
                            echo "$chart: $revision is $status... waiting..."
                        else
                            echo "$RELEASE_NAME has no ongoing deployment... Proceeding..."
                            exit 0
                        fi
                    done
                    echo "Could not install $RELEASE_NAME! Please check the cluster state."
                    exit 1
            fi
      - deploy:
          name: Swap requirements files
          command: |
              mv codacy/requirements.yaml codacy/requirements_old.yaml
              mv codacy/requirements-dev.yaml codacy/requirements.yaml
      - deploy:
          name: Install bespoke codacy chart
          command: |
              echo "Installing $RELEASE_NAME: $NAMESPACE"
              make -C .doks/ deploy_to_doks RELEASE_NAME=$RELEASE_NAME NAMESPACE=$NAMESPACE CODACY_URL=$CODACY_URL
      - <<: *validate_deployments

workflows:
  helm_lint:
    jobs:
      - codacy/checkout_and_version:
          filters:
            branches:
              ignore:
                - master
                - release
      - codacy/helm_aws:
          name: helm_lint
          cmd: helm lint codacy/
          requires:
            - codacy/checkout_and_version

  test_deploy_unstable:
    jobs:
      - codacy/checkout_and_version:
          filters:
            branches:
              only:
                - feature/publish-dev-to-unstable
      - deploy_to_selfhosted_dev:
          context: CodacyDO
          requires:
            - codacy/checkout_and_version

  deploy_chart_to_cluster:
    jobs:
      - codacy/checkout_and_version:
          dev_branch: "master"
          release_branch: "release"
          filters:
            branches:
              only:
                - master
      - codacy/helm_aws:
          name: helm_lint
          cmd: helm lint codacy/
          requires:
            - codacy/checkout_and_version
      - helm_push_unstable:
          context: CodacyDO
          requires:
            - deploy_to_doks
      - deploy_to_doks:
          context: CodacyDO
          requires:
            - helm_lint
      - upload_docs:
          requires:
            - deploy_to_doks

  hourly_pipeline:
    jobs:
      - codacy/checkout_and_version:
          dev_branch: "master"
          release_branch: "release"
          filters:
              branches:
                only:
                  - master
      - codacy/helm_aws:
          name: helm_lint
          cmd: helm lint codacy/
          requires:
            - codacy/checkout_and_version
      - update_versions:
          context: CodacyDO
          requires:
            - helm_lint
      - helm_push_unstable:
          context: CodacyDO
          requires:
            - update_versions
      - get_changelogs:
          context: CodacyDO
          requires:
            - update_versions
      - deploy_to_doks_hourly:
          context: CodacyDO
          requires:
            - helm_push_unstable
      - validate_deployment_status_hourly:
          context: CodacyDO
          requires:
            - deploy_to_doks_hourly
      - test_api_dev:
          context: CodacyDO
          requires:
            - validate_deployment_status_hourly
      - test_e2e_dev:
          context: CodacyDO
          requires:
            - validate_deployment_status_hourly
      - test_web_dev:
          context: CodacyDO
          requires:
            - validate_deployment_status_hourly

  nightly_pipeline:
    triggers:
       - schedule:
           cron: "0 0 * * 1-5"
           filters:
             branches:
               only:
                 - master
    jobs:
      - codacy/checkout_and_version:
          dev_branch: "master"
          release_branch: "releases"
      - set_chart_version_nightly:
          context: CodacyDO
          requires:
            - codacy/checkout_and_version
      - codacy/helm_aws:
          name: helm_lint
          cmd: helm lint codacy/
          requires:
            - set_chart_version_nightly
      - update_versions:
          context: CodacyDO
          requires:
            - helm_lint
      - helm_push_unstable:
          context: CodacyDO
          requires:
            - update_versions
      - get_changelogs:
          context: CodacyDO
          requires:
            - update_versions
      - deploy_to_doks_nightly_1_14:
          context: CodacyDO
          requires:
            - helm_push_unstable
      - validate_deployment_status_nightly_1_14:
          context: CodacyDO
          requires:
            - deploy_to_doks_nightly_1_14
      - update_codacy_url_nightly_1_14:
          context: CodacyDO
          requires:
            - validate_deployment_status_nightly_1_14
      - deploy_to_doks_nightly_1_15:
          context: CodacyDO
          requires:
            - helm_push_unstable
      - validate_deployment_status_nightly_1_15:
          context: CodacyDO
          requires:
            - deploy_to_doks_nightly_1_15
      - update_codacy_url_nightly_1_15:
          context: CodacyDO
          requires:
            - validate_deployment_status_nightly_1_15
      - codacy/helm_promote:
          name: promote_chart_to_stable
          context: CodacyHelm
          chart_name: codacy
          source_charts_repo_url: "https://charts.codacy.com/unstable"
          target_charts_repo_url: "https://charts.codacy.com/nightly"
          requires:
            - update_codacy_url_nightly_1_14
            - update_codacy_url_nightly_1_15

  release_pipeline:
    jobs:
      - codacy/checkout_and_version:
          dev_branch: "master"
          release_branch: "releases"
          filters:
            tags:
              only: /^release-.*/
            branches:
              ignore: /.*/
      - codacy/helm_aws:
          name: helm_lint
          cmd: helm lint codacy/
          requires:
            - codacy/checkout_and_version
          filters:
            tags:
              only: /^release-.*/
      - set_chart_version_release:
          context: CodacyDO
          requires:
            - helm_lint
          filters:
            tags:
              only: /^release-.*/
      - update_versions:
          context: CodacyDO
          requires:
            - set_chart_version_release
          filters:
            tags:
              only: /^release-.*/
      - helm_push_incubator:
          context: CodacyDO
          requires:
            - update_versions
          filters:
            tags:
              only: /^release-.*/
      - get_changelogs:
          context: CodacyDO
          requires:
            - helm_push_incubator
          filters:
            tags:
              only: /^release-.*/
      - deploy_to_doks_release:
          context: CodacyDO
          requires:
            - helm_push_incubator
          filters:
            tags:
              only: /^release-.*/
      - validate_deployment_status_release:
          context: CodacyDO
          requires:
            - deploy_to_doks_release
          filters:
            tags:
              only: /^release-.*/
      - manual_qa_hold:
          type: approval
          context: CodacyDO
          requires:
           - validate_deployment_status_release
          filters:
            tags:
              only: /^release-.*/
      - codacy/tag_version:
          name: tag_version
          context: CodacyDO
          requires:
            - manual_qa_hold
          filters:
            tags:
              only: /^release-.*/
      - codacy/helm_promote:
          name: promote_chart_to_stable
          context: CodacyHelm
          chart_name: codacy
          source_charts_repo_url: "https://charts.codacy.com/incubator"
          target_charts_repo_url: "https://charts.codacy.com/stable"
          requires:
            - tag_version
          filters:
            tags:
              only: /^release-.*/
      - slack_notify_release:
          context: CodacyDO
          requires:
            - promote_chart_to_stable
            - get_changelogs
          filters:
            tags:
              only: /^release-.*/